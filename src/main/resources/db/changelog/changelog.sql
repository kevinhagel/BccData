-- liquibase formatted sql

-- changeset kevin:1646466510501-1
-- preconditions onFail:MARK_RAN onError:MARK_RAN
-- precondition-sql-check expectedResult:0 select count(*) from information_schema.tables where table_name='course';
CREATE TABLE "course"
(
    "id"          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    "description" VARCHAR(255),
    "name"        VARCHAR(255),
    CONSTRAINT "course_pkey" PRIMARY KEY ("id")
);
ALTER TABLE "course"
    ADD CONSTRAINT "uk_4xqvdpkafb91tt3hsb67ga3fj" UNIQUE ("name");
-- rollback DROP TABLE IF EXISTS course CASCADE;

-- changeset kevin:1646466510501-2
-- preconditions onFail:MARK_RAN onError:MARK_RAN
-- precondition-sql-check expectedResult:0 select count(*) from information_schema.tables where table_name='course_term_enrollment';
CREATE TABLE "course_term_enrollment"
(
    "student_id"     BIGINT NOT NULL,
    "course_term_id" BIGINT NOT NULL,
    CONSTRAINT "course_term_enrollment_pkey" PRIMARY KEY ("student_id", "course_term_id")
);
ALTER TABLE "course_term_enrollment"
    ADD CONSTRAINT "uk_r0y0hw7lkbb1t5l83ubll99bu" UNIQUE ("course_term_id");
-- rollback DROP TABLE IF EXISTS course_term_enrollment CASCADE;

-- changeset kevin:1646466510501-5
-- preconditions onFail:MARK_RAN onError:MARK_RAN
CREATE SEQUENCE IF NOT EXISTS "hibernate_sequence" AS bigint START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1;
-- rollback DROP SEQUENCE IF EXISTS hibernate_sequence CASCADE;


-- changeset kevin:1646466510501-6
-- preconditions onFail:MARK_RAN onError:MARK_RAN
-- precondition-sql-check expectedResult:0 select count(*) from information_schema.tables where table_name='contact';
CREATE TABLE "contact"
(
    "id"                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    "cell_phone_number"   VARCHAR(255),
    "email"               VARCHAR(255),
    "extra_shit"          VARCHAR(255),
    "family_name"         VARCHAR(255),
    "first_name"          VARCHAR(255),
    "home_phone_number"   VARCHAR(255),
    "notes"               VARCHAR(255),
    "office_phone_number" VARCHAR(255),
    "work_phone_number"   VARCHAR(255),
    CONSTRAINT "contact_pkey" PRIMARY KEY ("id")
);
-- rollback DROP TABLE IF EXISTS contact CASCADE;


-- changeset kevin:1646466510501-7
-- preconditions onFail:MARK_RAN onError:MARK_RAN
-- precondition-sql-check expectedResult:0 select count(*) from information_schema.tables where table_name='course_term';
CREATE TABLE "course_term"
(
    "id"          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    "description" VARCHAR(255),
    "notes"       VARCHAR(255),
    "end_date"    date,
    "start_date"  date,
    "course_id"   BIGINT                                  NOT NULL,
    CONSTRAINT "course_term_pkey" PRIMARY KEY ("id")
);
-- rollback DROP TABLE IF EXISTS course_term CASCADE;

-- changeset kevin:1646466510501-8
-- preconditions onFail:MARK_RAN onError:MARK_RAN
-- precondition-sql-check expectedResult:0 select count(*) from information_schema.tables where table_name='folder';
CREATE TABLE "folder"
(
    "id"            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    "date_created"  date,
    "description"   VARCHAR(255),
    "last_accessed" date,
    "name"          VARCHAR(255),
    "notes"         VARCHAR(255),
    CONSTRAINT "folder_pkey" PRIMARY KEY ("id")
);
-- rollback DROP TABLE IF EXISTS folder CASCADE;

-- changeset kevin:1646466510501-9
-- preconditions onFail:MARK_RAN onError:MARK_RAN
-- precondition-sql-check expectedResult:0 select count(*) from information_schema.tables where table_name='instructor';
CREATE TABLE "instructor"
(
    "id"           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    "address"      VARCHAR(255),
    "full_name"    VARCHAR(255),
    "phone_number" VARCHAR(255),
    CONSTRAINT "instructor_pkey" PRIMARY KEY ("id")
);
-- rollback DROP TABLE IF EXISTS instructor CASCADE;

-- changeset kevin:1646466510501-10
-- preconditions onFail:MARK_RAN onError:MARK_RAN
-- precondition-sql-check expectedResult:0 select count(*) from information_schema.tables where table_name='registration';
CREATE TABLE "registration"
(
    "id"         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    "expired"    BOOLEAN,
    "local_date" date,
    "student_id" BIGINT                                  NOT NULL,
    CONSTRAINT "registration_pkey" PRIMARY KEY ("id")
);
-- rollback DROP TABLE IF EXISTS registration CASCADE;

-- changeset kevin:1646466510501-11
-- preconditions onFail:MARK_RAN onError:MARK_RAN
-- precondition-sql-check expectedResult:0 select count(*) from information_schema.tables where table_name='school';
CREATE TABLE "school"
(
    "id"             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    "address_city"   VARCHAR(255),
    "address_street" VARCHAR(255),
    "contact_name"   VARCHAR(255),
    "contact_phone"  VARCHAR(255),
    "name"           VARCHAR(255),
    "notes"          VARCHAR(255),
    CONSTRAINT "school_pkey" PRIMARY KEY ("id")
);
-- rollback DROP TABLE IF EXISTS school CASCADE;

-- changeset kevin:1646466510501-12
-- preconditions onFail:MARK_RAN onError:MARK_RAN
-- precondition-sql-check expectedResult:0 select count(*) from information_schema.tables where table_name='school_term';
CREATE TABLE "school_term"
(
    "school_id"       BIGINT NOT NULL,
    "student_id"      BIGINT NOT NULL,
    "term_end_date"   date,
    "term_start_date" date,
    CONSTRAINT "school_term_pkey" PRIMARY KEY ("school_id", "student_id")
);
-- rollback DROP TABLE IF EXISTS school_term CASCADE;

-- changeset kevin:1646466510501-13
-- preconditions onFail:MARK_RAN onError:MARK_RAN
-- precondition-sql-check expectedResult:0 select count(*) from information_schema.tables where table_name='student';
CREATE TABLE "student"
(
    "id"                BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    "active"            BOOLEAN                                 NOT NULL,
    "cell_phone_number" VARCHAR(255),
    "date_of_birth"     VARCHAR(255),
    "email"             VARCHAR(255),
    "family_name"       VARCHAR(255),
    "first_name"        VARCHAR(255),
    "home_phone_number" VARCHAR(255),
    "notes"             VARCHAR(255),
    CONSTRAINT "student_pkey" PRIMARY KEY ("id")
);
-- rollback DROP TABLE IF EXISTS student CASCADE;

-- changeset kevin:1646466510501-14
-- preconditions onFail:MARK_RAN onError:MARK_RAN
-- precondition-sql-check expectedResult:0 select count(*) from information_schema.tables where table_name='student_contact';
CREATE TABLE "student_contact"
(
    "student_id" BIGINT NOT NULL,
    "contact_id" BIGINT NOT NULL,
    CONSTRAINT "student_contact_pkey" PRIMARY KEY ("student_id", "contact_id")
);
-- rollback DROP TABLE IF EXISTS student_contact CASCADE;

-- changeset kevin:1646466510501-15
-- preconditions onFail:MARK_RAN onError:MARK_RAN
-- precondition-sql-check expectedResult:0 select count(*) from information_schema.tables where table_name='student_folders';
CREATE TABLE "student_folders"
(
    "students_id" BIGINT NOT NULL,
    "folders_id"  BIGINT NOT NULL,
    CONSTRAINT "student_folders_pkey" PRIMARY KEY ("students_id", "folders_id")
);
-- rollback DROP TABLE IF EXISTS student_folders CASCADE;

-- changeset kevin:1646466510501-151
-- preconditions onFail:MARK_RAN onError:MARK_RAN
-- precondition-sql-check expectedResult:0 select count(*) from information_schema.tables where table_name='users';
CREATE TABLE "users"
(
    "id" VARCHAR(255) NOT NULL,
    CONSTRAINT "users_pkey" PRIMARY KEY ("id")
);


-- changeset kevin:1646466510501-16
-- preconditions onFail:MARK_RAN onError:MARK_RAN
-- precondition-sql-check expectedResult:0 select count(*) from information_schema.table_constraints where constraint_name='fk_course_term_enrollment_student_id';
ALTER TABLE "course_term_enrollment"
    ADD CONSTRAINT "fk_course_term_enrollment_student_id" FOREIGN KEY ("student_id") REFERENCES "student" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION;
-- rollback ALTER TABLE IF EXISTS course_term_enrollment DROP CONSTRAINT IF EXISTS fk_course_term_enrollment_student_id;


-- changeset kevin:1646466510501-17
-- preconditions onFail:MARK_RAN onError:MARK_RAN
-- precondition-sql-check expectedResult:0 select count(*) from information_schema.table_constraints where constraint_name='fk_student_folders_folder_id';
ALTER TABLE "student_folders"
    ADD CONSTRAINT "fk_student_folders_folder_id" FOREIGN KEY ("folders_id") REFERENCES "folder" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION;
-- rollback ALTER TABLE IF EXISTS student_folders DROP CONSTRAINT IF EXISTS fk_student_folders_folder_id;


-- changeset kevin:1646466510501-18
-- preconditions onFail:MARK_RAN onError:MARK_RAN
-- precondition-sql-check expectedResult:0 select count(*) from information_schema.table_constraints where constraint_name='fk_student_folders_student_id';
ALTER TABLE "student_folders"
    ADD CONSTRAINT "fk_student_folders_student_id" FOREIGN KEY ("students_id") REFERENCES "student" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION;
-- rollback ALTER TABLE IF EXISTS student_folders DROP CONSTRAINT IF EXISTS fk_student_folders_student_id;


-- changeset kevin:1646466510501-19
-- preconditions onFail:MARK_RAN onError:MARK_RAN
-- precondition-sql-check expectedResult:0 select count(*) from information_schema.table_constraints where constraint_name='fk_registration_student_id';
ALTER TABLE "registration"
    ADD CONSTRAINT "fk_registration_student_id" FOREIGN KEY ("student_id") REFERENCES "student" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION;
-- rollback ALTER TABLE IF EXISTS registration DROP CONSTRAINT IF EXISTS fk_registration_student_id;


-- changeset kevin:1646466510501-20
-- preconditions onFail:MARK_RAN onError:MARK_RAN
-- precondition-sql-check expectedResult:0 select count(*) from information_schema.table_constraints where constraint_name='fk_student_contact_student_id';
ALTER TABLE "student_contact"
    ADD CONSTRAINT "fk_student_contact_student_id" FOREIGN KEY ("student_id") REFERENCES "student" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION;
-- rollback ALTER TABLE IF EXISTS student_contact DROP CONSTRAINT IF EXISTS fk_student_contact_student_id;


-- changeset kevin:1646466510501-21
-- preconditions onFail:MARK_RAN onError:MARK_RAN
-- precondition-sql-check expectedResult:0 select count(*) from information_schema.table_constraints where constraint_name='fk_school_term_school_id';
ALTER TABLE "school_term"
    ADD CONSTRAINT "fk_school_term_school_id" FOREIGN KEY ("school_id") REFERENCES "school" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION;
-- rollback ALTER TABLE IF EXISTS school_term DROP CONSTRAINT IF EXISTS fk_school_term_school_id;


-- changeset kevin:1646466510501-22
-- preconditions onFail:MARK_RAN onError:MARK_RAN
-- precondition-sql-check expectedResult:0 select count(*) from information_schema.table_constraints where constraint_name='fk_student_contact_contact_id';
ALTER TABLE "student_contact"
    ADD CONSTRAINT "fk_student_contact_contact_id" FOREIGN KEY ("contact_id") REFERENCES "contact" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION;
-- rollback ALTER TABLE IF EXISTS student_contact DROP CONSTRAINT IF EXISTS fk_student_contact_contact_id;


-- changeset kevin:1646466510501-23
-- preconditions onFail:MARK_RAN onError:MARK_RAN
-- precondition-sql-check expectedResult:0 select count(*) from information_schema.table_constraints where constraint_name='fk_school_term_student_id';
ALTER TABLE "school_term"
    ADD CONSTRAINT "fk_school_term_student_id" FOREIGN KEY ("student_id") REFERENCES "student" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION;
-- rollback ALTER TABLE IF EXISTS school_term DROP CONSTRAINT IF EXISTS fk_school_term_student_id;


-- changeset kevin:1646466510501-24
-- preconditions onFail:MARK_RAN onError:MARK_RAN
-- precondition-sql-check expectedResult:0 select count(*) from information_schema.table_constraints where constraint_name='fk_course_term_course_id';
ALTER TABLE "course_term"
    ADD CONSTRAINT "fk_course_term_course_id" FOREIGN KEY ("course_id") REFERENCES "course" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION;
-- rollback ALTER TABLE IF EXISTS course_term DROP CONSTRAINT IF EXISTS fk_course_term_course_id;


-- changeset kevin:1646466510501-25
-- preconditions onFail:MARK_RAN onError:MARK_RAN
-- precondition-sql-check expectedResult:0 select count(*) from information_schema.table_constraints where constraint_name='fk_course_term_enrollment_course_term_id';
ALTER TABLE "course_term_enrollment"
    ADD CONSTRAINT "fk_course_term_enrollment_course_term_id" FOREIGN KEY ("course_term_id") REFERENCES "course_term" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION;
-- rollback ALTER TABLE IF EXISTS course_term_enrollment DROP CONSTRAINT IF EXISTS fk_course_term_enrollment_course_term_id;


